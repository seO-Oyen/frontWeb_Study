# 선택자(selector)
1. css 선택자와 jquery 선택자의 차이
	1) css 선택자
		- css 는 html요소의 스타일을 정의하는데 사용되는 언어
		- css 선택자는 스타일을 적용하고자 하는 html 요소를 식별
		ex) .className 선택자는 html 문서 내의 모든 class="className" 속성을 가진 요소에
			스타일을 적용, #idName 선택자는 id="idName"속성을 가진 단일 요소에 스타일 적용
		ex)
			.className{ color: blue; }
			#idName{ font-size: 14px; }
			p{ line-height: 1.6; }
			input[type=text]{ background-color: #f0f0f0; }
	
	2) jQuery 선택자
		- jquery는 자바스크립트 라이브러리로 문서 객체모델(DOM)을 쉽게 조작하기 위해 사용
		- jquery 선택자는 css 선택자 구문을 사용하여 문서의 요소를 선택하기만
			jquery 함수를 사용하여 해당 요소에 다양한 동작 (ex: 이벤트 핸들링, DOM 조작,
			애니메이션)을 적용할 수 있도록 함
		ex)
			$(".className").click(funtion(){
			
			})
			$("#idName").text("텍스트 변경")
			$("input[type=text]").val("새로운 입력값")
	
	3) 차이점
		1. 적용 범위
			- css는 주로 스타일링을 위해 사용
			- jquery는 DOM조작, 이벤트 핸들링, 애니메이션 등의 인터렉티브한 기능을
				구현할 때 사용
		2. 문법
			- css는 주로 선언적 언어로 스타일 시트 내에서 선택자를 사용하여 스타일을 정의
			- jquery는 자바스크립트를 기반으로 하여 선택자를 통해 선택한 요소에 대해
				실행할 함수나 메서드를 지정
		3. 동적처리
			- css 선택자는 정적이며, 페이지 로드시 개선되어 적용
			- jquery 선택자는 스크립트가 실행될 때 동적으로 요소를 선택, 조작할 수 있고
				사용자의 상호작용에 따라 요소를 선택하고 조작하는 것이 가능
		- css와 jquery 선택자는 같은 문법을 공유하지만, 사용 목적과 실행 컨텍스트가 다르다.
			css 스타일링, jquery는 동적인 웹페이지의 기능 구현에 사용
			
# 계층형 선택자
css와 jquery는 계층형 구조 내에서 요소를 선택하기 위해 다양한 계층형 선택자를 사용.
이 선택자들은 요소간의 부모-자식 관계나 형제 관계를 기반으로 요소를 선택.

1. css 계층형 선택자
	1) 자손 선택자
		- 공백으로 표현되며, 지정된 요소의 자손인 모든 요소를 선택
		ex) div 요소 내 모든 span 요소는 글자색이 blue
			div span {
				color: blue;
			}
	2) 자식 선택자
		- `>` 기호를 사용하여 지정된 요소의 직접적인 자식만을 선택
		ex) ul의 직접적인 자식인 li요소만을 선택
			ul > li {
				font-weight: bold;
			}
	3) 인접 형제 선택자
		- `+` 기호를 사용하여 지정된 요소의 다음에 바로 오는 형제 요소 하나만을 선택
		ex) h1요소 다음에 바로 오는 p요소를 선택
			h1 + p {
				margin-top: 0;
			}
	4) 일반 형제 선택자
		- `~` 기호를 사용하여 지정된 요소의 뒤에 오는 형제 요소들을 모두 선택
		ex) h1 요소 뒤에오는 모든 p요소를 선택
			h1 ~ p {
				color: red;
			}

2. jquery 계층형 선택자
	- jquery 에서도 css선택자를 사용하여 계층형으로 요소를 선택할 수 있으며,
		이때 jquery메서드를 통해 추가적인 동적 처리도 가능
	1) 자손 선택자
		$("div span").css("color", "blue")
	2) 자식 선택자
		$("ul > li").addClass("heightlingt")
		=> ul을 부모로 둔 li 태그는 style의 클래스로 정의된 heightlingt를 적용
	3) 인접 형제 선택자
		$("h1 + p").hide()
		=> h1을 앞에 둔 p태그(1개만)는 보이지 않게 처리
	4) 일반 형제 선택자
		$("h1 ~ p").fadeOut()
		=> h1을 앞에 둔 이후에 나오는 모든 p태그(여러개)는 서서히 보이지 않게 처리

	jquery는 부모, 자식, 형제 등과 관련된 특수한 탐색 메서드를 제공하여 DOM을 보다 쉽게
	탐색할 수 있게 한다
	ex) .parent(), .children(), .siblings(), .next(), .prev(), .closet(), .find()
	이러한 메서드를 사용하면 선택자만으로는 불가능한 복잡한 선택과 조작을 할 수 있다.
	ex)
		$(".item").children(".active").css("color", "blue")
		=> item클래스를 가진 모든 요소의 모든 자식 중에 active 클래스를 가진 요소를
			찾아 글자색상을 blue로 처리
		$("#child").parent().addClass("highlight")
		=> 아이디가 child의 부모 객체에게 css로 선언한 .highlight를 적용